// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoReminder.Server.DBContext;

#nullable disable

namespace ToDoReminder.Server.Migrations
{
    [DbContext(typeof(ToDoReminderContext))]
    [Migration("20220128081046_ModifyTodoTableName")]
    partial class ModifyTodoTableName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ToDoReminder.Server.Entity.MemoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateDateTiem")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_datetime");

                    b.HasKey("Id");

                    b.ToTable("memo");
                });

            modelBuilder.Entity("ToDoReminder.Server.Entity.ToDoReminderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateDateTiem")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<DateTime>("ReminderDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("reminder_datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_datetime");

                    b.HasKey("Id");

                    b.ToTable("todoreminder");
                });

            modelBuilder.Entity("ToDoReminder.Server.Entity.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("account");

                    b.Property<DateTime>("CreateDateTiem")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_datetime");

                    b.Property<string>("NeckName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("neckname");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_datetime");

                    b.HasKey("Id");

                    b.ToTable("user");
                });
#pragma warning restore 612, 618
        }
    }
}
